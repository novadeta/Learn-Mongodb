Mongodb
mongodb tidak menggunakan SQL.namun menggunakan javascript sebagai bahasa utama untuk
manipulasi document

Mongodb -> Not Only Sql

> Relational Database biasanya menyimpan data dalam bentuk table,dan menyimpan
data dalam bentuk table,dan relasinya disimpan di table lain
> Document oriented database biasanya menyimpan data dalam bentuk JSON
dan menyimpan relasinya sebagai embedded object di dalam document yang sama

Istilah Relational vs Document
Table - Collection
Column - Field
Row,Record - Document
Join Table - Embedded Document,Reference
SQL - Js(Mongodb)

DATABASE
tempat untuk menyimpan Collection
semua collection harus disimpan di database

Command Mongodb CLI

use -> membuat database/berpindah database
show databases/dbs -> melihat semua database
db.dropDatabase() -> delete database
db.getName() > ambil nama database
db.hostInfo() > ambil info host tempat mongodb
db.version() > .....
db.stats() > ambil 

Collection

tempat menyimpan document
max per document yang bisa disimpan adalah 16mb
maximum level nested document yang bisa disimpan adalah 100 level

db.getCollectionNames() > ambil semua nama collection
createCollection(name) > membuat collection baru
getcollection() > ambil object createCollection
db.<name> > sama dengan getcollection

db.<collection>.find() > mencari document
db.<collection>.drop() > hapus collection
db.<collection>.count() > menghitung document di collection

Data Model
pindah dari relational db ke document db bukanlah hal yang sesederhana
hanya dengan memindahkan  semua table ke collection

Schema yang flexible
> di mongodb kita bisa memasukkan data ke collection secara langsung  tanpa mendefinisikan 
schema collectionnya
> Scehma untuk collection di mongodb sangat flexible,tiap document bisa berbeda.tidak seperti
realtional database setiap record harus sama
> namun pada prakteknya,sangat direkomendasikan menggunakan jenis data yang sama
untuk tiap collection,walaupun bisa berbeda beda di collection yang sama.

Primary Key
saat membuat document di mongodb,kita wajib menambahkan primary key
menggunakan field _id
selain itu primary key tidak bisa lebih dari 1 field,hanya bisa filed _id,
jadi jika kita ingin membuat composite primary key,maka kita hanya bisa melakukan dengan menggunakan
1 field _id

Embedded VS Reference
 Embedded : 
> Antar Document saling ketergantungan
> tidak bisa langsung melakukan perubahan ke embedded document
> embedded document selalu dibuthkan ketika mengambil data document

Reference :

> Antar Document bisa berdiri sendiri dan tidak terlalu ketergantungan satu sama
lain
> Bisa melakukan manipulasi data langsung terhadap reference document
> REference document tidak selalu dibuthkan saat mengambil document

BSON
binary JSON yaitu binary encoded serialization document seperti JSON 
kenapa mongodb itu menggunakan BSON karena mongodb itu mendukung tipe data yang bukan
text contohnya img 

Objectid
random data yang unik,cepat untuk digenerate dan terurut
niali objectid memiliki ukuran panjang 12 byte,konsisten terdiri dari 
informasi 4 byte timestamp,5 byte random value dan 3 byte incrementing counter
obejctid digunakan sebagai default _id primary key di document jika kita tidak secara
eksplisit menyebutkan _id documentnya

Date dan ISODate
64 vit integer yang mempresentasikan angka milisecond sejak unix epoch
nilai ini bisa merepresentasikan waktu dengan jarak 290juta tahun sebelum
dan setelah unix epoch
ISODate mereupakan representasi waktu yang digunakan oleh mongoDB
Date ini kompatibel dengan Date JS

Query Document
sama seperti di relational DB,di mongodb kita bisa melakukan query atau 
pencarian document yang sudah kita simpan di collection


Comparison Query Operator

$eq > membandingkan value dengan value lain
$gt > membandingkan value lebih besat dari value lain
$gte > membandingkan value lebih besar atau sama dengan value lain
$lt > membandingkan value lebih kecil dari value lain
$lte > membandingkan value lebih kecil atau sama dengan value lain
$in > membandingkan value dengan value yang ada di array
$nin > membandingkan value tidak ada dalam value yang ada di array
$ne > membandingkan value tidak sama dengan value lain

Element Operator
$exists > mencocokkan document yang memiliki field tersebut
$type > mencocokkan document yang memiliki type field tersebut

Evaluation Operator
$expr > Menggunakan aggregation operation
$jsonScehma > Validasi document sesuai dengan JSON Schema
$mod > melakukan operasi modulo
$regex > mengambil document sesuai dengan regular expression
$text > Melakukan pencarian menggunakan text
$where > mengambil document dengan Javscript function